/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Packages {
  version: number;
  packages: {
    /**
     * The ID of the package (Non-duplicated alphanumeric characters. Use a file name that represents the package. If there is no representative name, use the archive file name. If there is a possibility of duplication, such as only one word, prefix it with the developer's name.)
     */
    id: string;
    /**
     * The name of the package (Up to 25 characters)
     */
    name: string;
    /**
     * The overview of the package (Up to 35 characters)
     */
    overview: string;
    /**
     * The description of the package
     */
    description: string;
    /**
     * The name of the developer of the package
     */
    developer: string;
    /**
     * The name of the developer of the package from which it was derived
     */
    originalDeveloper?: string;
    /**
     * ID of the package on which it depends
     */
    dependencies?: string[];
    /**
     * ID of the package causing the conflict (not yet implemented)
     */
    conflicts?: string[];
    /**
     * ID of the compatible package (not yet implemented)
     */
    provides?: string;
    /**
     * The URL of the package introduction page
     */
    pageURL: string;
    /**
     * The URLs of the package download page
     *
     * @minItems 1
     */
    downloadURLs: [string, ...string[]];
    /**
     * URL to be used for the batch install feature
     */
    directURL?: string;
    /**
     * The latest version of the package
     */
    latestVersion: string;
    /**
     * Whether to track the latest version (Default: false)
     */
    isContinuous?: boolean;
    /**
     * The name of the installer file
     */
    installer?: string;
    /**
     * The arguments passed to the installer (`$instpath` will be replaced with the installation path.)
     */
    installArg?: string;
    /**
     * Niconi Commons ID (not yet implemented)
     */
    nicommons?: string;
    /**
     * If this is true, this package will not be visible until it is installed
     */
    isHidden?: boolean;
    files: {
      /**
       * The name of the file used in the package
       */
      filename: string;
      /**
       * Whether it is optional during installation (Default: false)
       */
      isUninstallOnly?: boolean;
      /**
       * Whether the file is a non-uninstallable file (Default: false)
       */
      isInstallOnly?: boolean;
      /**
       * Whether it is a directory (Default: false)
       */
      isDirectory?: boolean;
      /**
       * The relative path of the file in the archive (Default: null)
       */
      archivePath?: string;
      /**
       * Whether it is not included in the latest version (Default: false)
       */
      isObsolete?: boolean;
    }[];
    releases?: {
      /**
       * The version of the release
       */
      version: string;
      integrity: {
        archive?: string;
        file: {
          target: string;
          hash: string;
        }[];
      };
    }[];
  }[];
}
