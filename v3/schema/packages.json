{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "version": {
      "type": "integer",
      "description": "The current schema version is '3'."
    },
    "packages": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+/[a-zA-Z0-9]+$",
            "description": "ID to identify the package. {A: author name in alphanumeric character}/{B: camelcase package name without version number in alphanumeric character}. A: Alphanumeric author names are guessed from the IDs and URLs of social networking sites including Github. If not known, convert the Japanese author name to English or Roman characters. B: Use a file name that represents the package. If there is no representative name, use the archive file name. The words 'AviUtl', 'plugin', and 'script' are redundant and unnecessary."
          },
          "name": {
            "type": "string",
            "maxLength": 25,
            "description": "The name of the package to display (Up to 25 characters). The words 'AviUtl', 'plugin', and 'script' are redundant and unnecessary."
          },
          "overview": {
            "type": "string",
            "maxLength": 35,
            "description": "The overview of the package (Up to 35 characters) in Japanese. The words 'AviUtl' is redundant and unnecessary."
          },
          "description": {
            "type": "string",
            "description": "The description of the package in Japanese. Please explain the function of the package itself, not the problem that this package solves."
          },
          "developer": {
            "type": "string",
            "description": "The name of the developer of the package. Different from id, Japanese can be used."
          },
          "originalDeveloper": {
            "type": "string",
            "description": "The name of the developer of the package from which it was derived"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(([A-Za-z0-9]+\\/[A-Za-z0-9]+((<|<=|=|>=|>)[^<=>&|\\n]+)?)|(aviutl[A-Za-z0-9.]+)|(exedit[A-Za-z0-9.]+))(\\|(([A-Za-z0-9]+\\/[A-Za-z0-9]+((<|<=|=|>=|>)[^<=>&|\\n]+)?)|(aviutl[A-Za-z0-9.]+)|(exedit[A-Za-z0-9.]+)))*$"
            },
            "description": "IDs of the packages on which it depends. Selective dependencies can be written by concatenating multiple IDs with '|'. It is also possible to specify AviUtl or Exedit in formats such as 'aviutl1.10' or 'exedit0.92'."
          },
          "conflicts": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(([A-Za-z0-9]+\\/[A-Za-z0-9]+((<|<=|=|>=|>)[^<=>&|\\n]+)?))(&([A-Za-z0-9]+\\/[A-Za-z0-9]+((<|<=|=|>=|>)[^<=>&|\\n]+)?))*$"
            },
            "description": "IDs of the packages causing the conflict"
          },
          "provides": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+/[a-zA-Z0-9]+$",
            "description": "ID of the compatible package (not yet implemented)"
          },
          "pageURL": {
            "type": "string",
            "pattern": "^https?:\\/\\/",
            "description": "The URL of the package introduction page"
          },
          "downloadURLs": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^https?:\\/\\/"
            },
            "minItems": 1,
            "description": "The URLs of the package download page"
          },
          "directURL": {
            "type": "string",
            "pattern": "^https?:\\/\\/",
            "description": "URL to be used for the batch install feature"
          },
          "latestVersion": {
            "type": "string",
            "pattern": "^[^<=>&|\\n]+$",
            "description": "The latest version of the package. If not available, file update date (YYYYY/MM/DD)."
          },
          "isContinuous": {
            "type": "boolean",
            "description": "Whether to track the latest version (Default: false)"
          },
          "installer": {
            "type": "string",
            "description": "The name of the installer file"
          },
          "installArg": {
            "type": "string",
            "description": "The arguments passed to the installer (`$instpath` will be replaced with the installation path.)"
          },
          "nicommons": {
            "type": "string",
            "description": "Niconi Commons ID"
          },
          "isHidden": {
            "type": "boolean",
            "description": "If this is true, this package will not be visible until it is installed"
          },
          "files": {
            "type": "array",
            "description": "Specify files and folders in the archive; do not specify files and folders that are not related to the operation of the package, such as readme, license, source code.",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string",
                  "description": "The name of the file used in the package. Unless otherwise indicated in the readme or on the distribution page, if a file has a file extension of '.auf', '.aui', '.auo', '.auc', or '.aul' place all files/folders in the same parent folder as that file into the `plugins/` folder. Unless otherwise indicated in the readme or on the distribution page, if a file has a file extension of '.anm', '.obj', '.cam', '.tra', or '.scn', place all files/folders in the same parent folder as that file into the `script/{developer name in alphanumeric character}/` folder.",
                  "examples": [
                    "example.auf",
                    "plugin/example.auf",
                    "script/developer_name/example.obj"
                  ]
                },
                "isUninstallOnly": {
                  "type": "boolean",
                  "description": "Overwriting prohibited. May not be bundled with archive. e.g., configuration files. (Default: false)"
                },
                "isInstallOnly": {
                  "type": "boolean",
                  "description": "Duplication of this file doesn't mean a conflict. Do not uninstall this file. e.g., shared libraries. (Default: false)"
                },
                "isDirectory": {
                  "type": "boolean",
                  "description": "This is a directory (Default: false)"
                },
                "archivePath": {
                  "type": "string",
                  "description": "The relative path of the file in the archive, excluding filename (Default: null)"
                },
                "isObsolete": {
                  "type": "boolean",
                  "description": "This file is no longer in use and can be safely deleted (Default: false)"
                }
              },
              "required": ["filename"],
              "additionalProperties": false
            }
          },
          "releases": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "pattern": "^[^<=>&|\\n]+$",
                  "description": "The version of the release"
                },
                "integrity": {
                  "type": "object",
                  "properties": {
                    "archive": {
                      "type": "string",
                      "pattern": "^sha(256|384|512)-([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"
                    },
                    "file": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "target": {
                            "type": "string"
                          },
                          "hash": {
                            "type": "string",
                            "pattern": "^sha(256|384|512)-([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"
                          }
                        },
                        "required": ["target", "hash"],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": ["file"],
                  "additionalProperties": false
                }
              },
              "required": ["version", "integrity"],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "id",
          "name",
          "overview",
          "description",
          "developer",
          "pageURL",
          "downloadURLs",
          "latestVersion",
          "files"
        ],
        "additionalProperties": false
      }
    }
  },
  "required": ["version", "packages"],
  "additionalProperties": false
}
